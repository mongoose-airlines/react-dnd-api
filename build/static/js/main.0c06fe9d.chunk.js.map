{"version":3,"sources":["services/api-calls.js","pages/ClassList/ClassList.jsx","pages/ClassDetails/ClassDetails.jsx","pages/MonsterList/MonsterList.jsx","pages/MonsterDetails/MonsterDetails.jsx","pages/SearchForm/SearchForm.jsx","pages/SpellCard/SpellCard.jsx","pages/SpellSearch/SpellSearch.jsx","pages/SpellDetails/SpellDetails.jsx","pages/NavBar/NavBar.jsx","pages/App/App.js","serviceWorker.js","index.js"],"names":["baseUrl","spellSearch","formData","fetch","query","then","res","json","ClassList","state","results","classData","this","setState","console","log","className","map","classTitle","to","pathname","index","id","key","style","width","height","src","name","alt","Component","ClassDetails","props","location","classDetails","hit_die","proficiencies","proficiency","MonsterList","monsterList","monster","MonsterDetails","monsterDetails","monsterTitle","size","type","armor_class","actions","action","desc","SearchForm","formRef","React","createRef","handleSubmit","e","preventDefault","handleSpellSearch","handleChange","target","value","ref","onSubmit","onChange","SpellCard","spell","SpellSearch","spells","a","length","SpellDetails","spellDetails","spellName","match","params","classes","playerClass","NavBar","href","App","exact","path","render","Boolean","window","hostname","ReactDOM","history","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c06fe9d.chunk.js","sourcesContent":["const baseUrl = \"https://www.dnd5eapi.co/api\"\n\nexport function getClassList() {\n  return fetch(`${baseUrl}/classes`)\n  .then(res => res.json())\n}\n\nexport function getClassDetails(classTitle){\n  return fetch(`${baseUrl}/classes/${classTitle}`)\n  .then(res => res.json())\n}\n\nexport function getMonsterList() {\n  return fetch(`${baseUrl}/monsters`)\n  .then(res => res.json())\n}\n\nexport function getMonsterDetails(monsterTitle) {\n  return fetch(`${baseUrl}/monsters/${monsterTitle}`)\n  .then(res => res.json())\n}\n\nexport function spellSearch(formData) {\n  return fetch(`${baseUrl}/spells/?name=${formData.query}`)\n  .then(res => res.json())\n}\n\nexport function getSpellDetails(spellName) {\n  return fetch(`${baseUrl}/spells/${spellName}`)\n  .then(res => res.json())\n}\n\n","import React, { Component } from \"react\";\nimport { getClassList } from \"../../services/api-calls\";\nimport { Link } from \"react-router-dom\";\n\nclass ClassList extends Component {\n  state = {\n    results: [],\n  };\n\n  async componentDidMount() {\n\n    const classData = await getClassList();\n    this.setState({ results: classData.results });\n    console.log(this.state.results);\n  } \n\n  render() {\n    return (\n      <>\n        <h1>DERP, I'M THE CLASS DATA COMPONENT</h1>\n        <div className=\"icon-container\">\n          {this.state.results.map((classTitle) => (\n            <Link\n            to={{\n              pathname: `/class/${classTitle.index}`,\n              state: { classTitle },\n            }}\n          >\n            <div id=\"classDiv\" key={classTitle.index}>\n              <img style={{ width: \"100px\", height: \"100px\" }} src={`/images/${classTitle.name}.svg`} alt=\"\"/>\n              \n                {classTitle.name}\n            </div>\n            </Link>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ClassList;\n","import React, { Component } from \"react\";\nimport { getClassDetails } from \"../../services/api-calls\";\n\nclass ClassDetails extends Component {\n  state = {\n    classTitle: this.props.location.state.classTitle.index,\n    classDetails: {},\n  };\n\n  async componentDidMount() {\n    const classDetails = await getClassDetails(\n      this.props.location.state.classTitle.index\n    );\n    this.setState({ classDetails });\n  }\n\n  render() {\n    const { classDetails } = this.state;\n    return (\n      <div>\n        {classDetails.name ?\n        <>\n          <img src=\"http://theoldreader.com/kittens/320/240/\" alt=\"\"/>\n          <h2>{classDetails.name}</h2>\n          <div>Hit die: d{classDetails.hit_die}</div>\n          <h3>Proficiencies:</h3>\n          {classDetails.proficiencies.map((proficiency) => (\n            <div key={proficiency.index}>{proficiency.name}</div>\n          ))}\n        </>\n        :\n        <>\n          <p>Loading class details...</p>\n        </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default ClassDetails;\n","import React, { Component } from \"react\";\nimport { getMonsterList } from \"../../services/api-calls\";\nimport { Link } from \"react-router-dom\";\n\nclass MonsterList extends Component {\n  state = {\n    monsterList: [],\n  };\n\n  async componentDidMount() {\n    const monsterList = await getMonsterList();\n    this.setState({ monsterList: monsterList.results });\n  }\n  render() {\n    return (\n      <>\n        <h3>Monster List (OMG SCARY)</h3>\n        {this.state.monsterList.map((monster) => (\n          <>\n          <Link\n            key={monster.index}\n            to={{\n              pathname: `monster/${monster.index}`,\n              state: { monster },\n            }}\n          >\n            {monster.name}\n          </Link><br></br>\n          </>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default MonsterList;\n","import React, { Component } from \"react\";\nimport { getMonsterDetails } from \"../../services/api-calls\";\n\nclass MonsterDetails extends Component {\n  state = {\n    name: this.props.location.state.monster.index,\n    monsterDetails: {}, \n  };\n\n  async componentDidMount() {\n    const monsterDetails = await getMonsterDetails(this.state.name);\n    console.log(monsterDetails);\n    this.setState({ monsterDetails });\n    console.log(this.props.location);\n  }\n  render() {\n    const { monsterDetails } = this.state\n    return (\n      <>\n        <h3>Monster Deets</h3>\n        <img src=\"http://theoldreader.com/kittens/320/240/\" alt=\"\"/>\n        <h2>{monsterDetails.name}</h2>\n        <h4>Size: {monsterDetails.size}</h4>\n        <h4>Type: {monsterDetails.type}</h4>\n        <h4>AC: {monsterDetails.armor_class}</h4>\n        <h4>Actions:</h4>\n        {monsterDetails.actions ?\n        <>\n        {monsterDetails.actions.map(action => \n          <div key={action.name}>\n            <h4 >{action.name}</h4>\n            <h5>{action.desc}</h5>\n          </div>\n        )}\n        </>\n        :\n        <p>This poor monster has no actions. Womp womp.</p>\n        }\n      </>\n    );\n  }\n}\n\n\nexport default MonsterDetails;\n","import React, { Component } from \"react\";\n\nclass SearchForm extends Component {\n  state = {\n    formData: {\n      query: \"\",\n    },\n  };\n\n  formRef = React.createRef();\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.handleSpellSearch(this.state.formData);\n  };\n\n  handleChange = (e) => {\n    const formData = {\n      ...this.state.formData,\n      [e.target.name]: e.target.value,\n    };\n    this.setState({\n      formData,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form ref={this.formRef} onSubmit={this.handleSubmit}>\n          <input\n            name=\"query\"\n            type=\"text\"\n            value={this.state.formData.query}\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst SpellCard = (props) => {\n  return ( \n    <>\n      <Link\n        to={{\n          pathname: `/spell/${props.spell.index}`,\n        }}\n      >\n        <h2>{props.spell.name}</h2>\n      </Link>\n    </>\n   );\n}\n\nexport default SpellCard;","import React, { Component } from \"react\";\nimport { spellSearch } from \"../../services/api-calls\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport SpellCard from \"../SpellCard/SpellCard\"\n\nclass SpellSearch extends Component {\n  state = {\n    spells: [],\n  };\n\n  handleSpellSearch = async (formData) => {\n    const spells = await spellSearch(formData);\n    console.log(spells.results);\n    this.setState({ spells: spells.results });\n  };\n\n  render() {\n    return (\n      <>\n        <h3>Such Spellz</h3>\n          <SearchForm handleSpellSearch={this.handleSpellSearch} />\n          {this.state.spells.length ? \n          <>\n            {this.state.spells.map(spell => \n              <SpellCard\n                key={spell.index}\n                spell={spell}\n              />\n            )}\n          </>\n          :\n          <h3>Please search for a spell!</h3>\n          }\n      </>\n    );\n  }\n}\n\nexport default SpellSearch;\n","import React, { Component } from 'react'\nimport { getSpellDetails } from '../../services/api-calls'\n\nclass SpellDetails extends Component {\n  state = {\n    spellDetails: {},\n   }\n\n  async componentDidMount() {\n    const spellDetails = await getSpellDetails(this.props.match.params.name)\n    console.log(spellDetails)\n    this.setState({ spellDetails: spellDetails })\n    console.log(this.state.spellDetails)\n  }\n\n  render() {\n    const { spellDetails } = this.state\n    return (\n      <>\n        { spellDetails.name ? \n        <>\n          <h1>{spellDetails.name}</h1>\n          <img src=\"http://theoldreader.com/kittens/320/240/\" alt=\"\"/>\n          <p>{spellDetails.desc[0]}</p>\n          <h2>Spell Player Classes</h2>\n          {spellDetails.classes.length ?\n          <>\n            {spellDetails.classes.map(playerClass =>\n              <div key={playerClass.index}>\n                <p>{playerClass.name}</p>\n              </div>\n            )}\n          </>\n          :\n          <p>No player classes may use this spell</p>\n          }\n        </>\n        :\n        <>\n          <p>Loading spell details...</p>\n        </>\n        }\n      </>\n     );\n  }\n}\n\n\nexport default SpellDetails;\n","import React from \"react\";\n\nconst NavBar = () => {\n  return (\n      <header className=\"App-header\">\n        <img\n          src=\"/logo.svg\"\n          style={{ width: \"100px\", height: \"100px\" }}\n          className=\"App-logo\"\n          alt=\"logo\"\n        />\n        <a href=\"/classlist\">Class List, Bitches</a>\n        <a href=\"/monsterlist\">Scary Monsters HURR</a>\n        <a href=\"/spellSearch\">Search for Spellz</a>\n      </header>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Route } from 'react-router-dom'\nimport './App.css';\nimport ClassList from '../ClassList/ClassList'\nimport ClassDetails from '../ClassDetails/ClassDetails'\nimport MonsterList from '../MonsterList/MonsterList'\nimport MonsterDetails from '../MonsterDetails/MonsterDetails'\nimport SpellSearch from '../SpellSearch/SpellSearch'\nimport SpellDetails from '../SpellDetails/SpellDetails'\nimport NavBar from '../NavBar/NavBar'\n\nfunction App() {\n  return (\n    <>\n    <NavBar />\n    <Route exact path='/classlist' render={() =>\n      <ClassList />\n    }/>\n    <Route exact path='/monsterlist' render={() =>\n      <MonsterList />\n    }/>\n    <Route exact path='/monster/:name' render={({ location }) => \n      <MonsterDetails \n        location={location}\n      />\n    }/>\n    <Route exact path='/spell/:name' render={({ location, match }) => \n      <SpellDetails \n        location={location}\n        match={match}\n      />\n    }/>\n    <Route exact path='/class/:name' render={({ location }) => \n      <ClassDetails \n        location={location}\n      />\n    }/>\n    <Route exact path='/spellsearch' render={() =>\n      <SpellSearch \n      />\n    }/>\n    \n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <Route render={({history}) => <App history={history} />} />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}